CREATE TABLE driver_detail(
    driver_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Unique id for every driver',
    driver_name VARCHAR(50) NOT NULL COMMENT 'Name of the driver',
    contact_no BIGINT(10) NOT NULL UNIQUE COMMENT 'Contact number of the driver',
    license_number VARCHAR(50) COMMENT 'Driving license number of the driver',
    date_of_registration DATE NOT NULL COMMENT 'Registration date of the driver in the portal',
    average_rating DECIMAL(2,1) NOT NULL COMMENT 'Average rating of the driver provided by customers'
);

-- Setting the starting value of AUTO_INCREMENT to 1001
ALTER TABLE driver_detail AUTO_INCREMENT = 1001;
INSERT INTO driver_detail (driver_id, driver_name, contact_no, license_number, date_of_registration, average_rating) VALUES
(1001, 'Alex', 9900990091, 'USM101AL', CURRENT_DATE - INTERVAL 750 DAY, 4.3),
(1002, 'Bob', 8800880087, 'USQ102BO', CURRENT_DATE - INTERVAL 700 DAY, 4.1),
(1003, 'George', 9988998895, 'USB103GE', CURRENT_DATE - INTERVAL 650 DAY, 3.9),
(1004, 'Garry', 8899889981, 'USE104GA', CURRENT_DATE - INTERVAL 600 DAY, 4.0),
(1005, 'Peter', 7788778819, 'USQ105PÐ•', CURRENT_DATE - INTERVAL 1500 DAY, 4.2),
(1006, 'Chris', 9988298877, 'USB106CH', CURRENT_DATE - INTERVAL 200 DAY, 3.8),
(1007, 'Tim', 8899676677, 'USY107TI', CURRENT_DATE - INTERVAL 100 DAY, 4.0),
(1008, 'Steve', 6577889988, 'USW108SE', CURRENT_DATE - INTERVAL 60 DAY, 3.6),
(1009, 'Pat', 9876678900, 'USH109PA', CURRENT_DATE - INTERVAL 30 DAY, 4.8),
(1010, 'Nathan', 7896789618, 'USN110NA', CURRENT_DATE - INTERVAL 300 DAY, 4.0);


CREATE TABLE vehicle_details (
    car_registration VARCHAR(50) PRIMARY KEY COMMENT 'Registration number of the car',
    driver_id INT NOT NULL COMMENT 'Unique id of every driver',
    vehicle_model VARCHAR(50) NOT NULL COMMENT 'Model of the vehicle',
    vehicle_type VARCHAR(50) NOT NULL COMMENT 'Type of the vehicle',
    seating_capacity INT NOT NULL COMMENT 'Seating capacity of the car',
    charges_per_hour DECIMAL(6,2) NOT NULL DEFAULT 0 COMMENT 'Charges per hour of travel',
    FOREIGN KEY (driver_id) REFERENCES driver_detail(driver_id)
);
INSERT INTO vehicle_details (car_registration, driver_id, vehicle_model, vehicle_type, seating_capacity, charges_per_hour) VALUES
('US31D456', 1001, 'Toyota Corolla', 'Sedan', 4, 39.00),
('US31D457', 1002, 'Subaru Crosstek', 'SUV', 6, 49.00),
('US31D458', 1003, 'Toyota Highlander', 'SUV', 6, 59.00),
('US31D459', 1004, 'Honda Fit', 'Mini', 3, 19.00),
('US31D460', 1005, 'Volkswagon GTI', 'Hatchback', 5, 27.00),
('US31D461', 1006, 'Honda Civic', 'Sedan', 4, 34.00),
('US31D462', 1007, 'Kia Optima', 'Sedan', 4, 29.00),
('US31D463', 1008, 'Kia Rio', 'Hatchback', 4, 29.00),
('US31D464', 1009, 'Chevrolet Bolt', 'Mini', 3, 17.00),
('US31D465', 1010, 'Honda Pilot', 'SUV', 6, 69.00);


CREATE TABLE customer_details 
 (
    customer_id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'Unique id for every customer',
    customer_name VARCHAR(50) NOT NULL COMMENT 'Name of the customer',
    date_of_registration DATE NOT NULL COMMENT 'Date of customer registration in the portal',
    customer_phone BIGINT(10) NOT NULL UNIQUE COMMENT 'Phone number of the customer',
    customer_address TEXT COMMENT 'Address of the customer',
    credit_points INT NOT NULL DEFAULT 0 COMMENT 'Credit points awarded to the customer',
    wallet DECIMAL(6,2) DEFAULT 0 COMMENT 'Wallet amount of the customer'
);

INSERT INTO customer_details (customer_id, customer_name, date_of_registration, customer_phone, customer_address, credit_points, wallet) VALUES
(1, 'Ted Moseby', CURRENT_DATE - INTERVAL 100 DAY, 9898989898, 'Manhattan', 110, 400.00),
(2, 'Sheldon Copper', CURRENT_DATE - INTERVAL 90 DAY, 8989898989, 'Queens', 230, 150.00),
(3, 'Jessy Pinkman', CURRENT_DATE - INTERVAL 80 DAY, 7878787878, 'Pomonok', 80, 346.00),
(4, 'Billy Kimber', CURRENT_DATE - INTERVAL 75 DAY, 8787878787, 'Brooklyn', 90, 499.00),
(5, 'Thomas Shelby', CURRENT_DATE - INTERVAL 40 DAY, 9090909090, 'Newark', 30, 341.00),
(6, 'John Snow', CURRENT_DATE - INTERVAL 20 DAY, 8908908908, 'Yonkers', 50, 267.00);

CREATE TABLE booking_details 
(
    booking_id VARCHAR(10) PRIMARY KEY COMMENT 'Unique id for every booking',
    customer_id INT NOT NULL COMMENT 'Customer who booked the travel',
    driver_id INT NOT NULL COMMENT 'Driver allocated for the travel',
    date_of_booking TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Booking date of the travel',
    source VARCHAR(50) NOT NULL COMMENT 'Customer\'s pickup location',
    destination VARCHAR(50) NOT NULL COMMENT 'Customer\'s drop location',
    type_of_travel ENUM('pool', 'solo') NOT NULL COMMENT 'Type of travel chosen by customer',
    number_of_persons INT COMMENT 'Number of persons travelling',
    booking_status ENUM('waiting', 'travelling', 'completed', 'cancelled') NOT NULL DEFAULT 'waiting' COMMENT 'Status of the travel',
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (driver_id) REFERENCES driver_detail(driver_id)
);

INSERT INTO booking_details(booking_id, customer_id, driver_id, date_of_booking, source, destination, type_of_travel, number_of_persons, booking_status) VALUES
('BK101', 1, 1006, NOW() - INTERVAL 8760 HOUR, 'Yonkers', 'Brooklyn', 'pool', 1, 'completed'),
('BK102', 2, 1006, NOW() - INTERVAL 8001 HOUR, 'Yonkers', 'Brooklyn', 'pool', 1, 'completed'),
('BK103', 3, 1006, NOW() - INTERVAL 7665 HOUR, 'Yonkers', 'Brooklyn', 'pool', 2, 'completed'),
('BK104', 3, 1001, NOW() - INTERVAL 438000 MINUTE, 'Manhattan', 'Queens', 'solo', NULL, 'cancelled'),
('BK105', 5, 1003, NOW() - INTERVAL 394300 MINUTE, 'Queens', 'Elizabeth', 'solo', 3, 'completed'),
('BK106', 5, 1004, NOW() - INTERVAL 306199 MINUTE, 'Elizabeth', 'Queens', 'solo', 1, 'completed'),
('BK107', 6, 1005, NOW() - INTERVAL 262000 MINUTE, 'Elizabeth', 'Brooklyn', 'solo', NULL, 'cancelled'),
('BK108', 3, 1004, NOW() - INTERVAL 175200 MINUTE, 'Elizabeth', 'Huntington', 'solo', NULL, 'completed'),
('BK109', 4, 1003, NOW() - INTERVAL 100000 MINUTE, 'Huntington', 'Woodrow', 'solo', NULL, 'cancelled'),
('BK110', 4, 1006, NOW() - INTERVAL 80000 MINUTE, 'Woodrow', 'Manhattan', 'solo', NULL, 'cancelled'),
('BK111', 1, 1007, NOW() - INTERVAL 40000 MINUTE, 'Queens', 'Newark', 'solo', NULL, 'completed'),
('BK112', 1, 1008, NOW() - INTERVAL 262800 SECOND, 'Huntington', 'Woodrow', 'solo', NULL, 'completed'),
('BK113', 5, 1010, NOW() - INTERVAL 720 SECOND, 'Huntington', 'Manhattan', 'solo', NULL, 'waiting'),
('BK114', 4, 1009, NOW() - INTERVAL 360 SECOND, 'Brooklyn', 'Yonkers', 'pool', 2, 'travelling'),
('BK115', 16, 1009, NOW(), 'Brooklyn', 'Yonkers', 'pool', 4, 'travelling');

CREATE TABLE coupon_details (
    coupon_code VARCHAR(50) PRIMARY KEY COMMENT 'Unique coupon code',
    expiry_date DATE NOT NULL COMMENT 'Expiry date of the coupon code',
    description TEXT NOT NULL COMMENT 'Description of the coupon code',
    discount_percentage FLOAT COMMENT 'Discount of the coupon code in percentage'
);
INSERT INTO coupon_details (coupon_code, expiry_date, description, discount_percentage) VALUES
('WELCOME20', CURRENT_DATE - INTERVAL 7 DAY, 'Welcome offer', 20),
('SEASONAL15', CURRENT_DATE - INTERVAL 1 DAY, 'Seasonal offer', 15),
('HAPPY30', CURRENT_DATE, 'Happy hours offer', 30),
('DHAMAKA20', CURRENT_DATE + INTERVAL 31 DAY, 'Marching it offer', 20);


CREATE TABLE payment_details (
    payment_id VARCHAR(10) PRIMARY KEY COMMENT 'Unique id for every payment',
    booking_id VARCHAR(10) NOT NULL COMMENT 'Completed booking id, for which payment is made',
    journey_duration INT NOT NULL COMMENT 'Journey duration in minutes',
    waiting_duration INT DEFAULT 0 COMMENT 'Waiting duration in minutes',
    coupon_code VARCHAR(50) COMMENT 'Coupon code applied by the customer',
    fare DECIMAL(6,2) NOT NULL DEFAULT 0 COMMENT 'Fare of the journey',
    payment_type ENUM('cash', 'wallet', 'upi') NOT NULL DEFAULT 'wallet' COMMENT 'Mode of payment',
    driver_rating FLOAT COMMENT 'Rating for the driver',
    feedback TEXT COMMENT 'Feedback for the journey/driver',
    FOREIGN KEY (booking_id) REFERENCES booking(booking_id),
    FOREIGN KEY (coupon_code) REFERENCES coupon_details(coupon_code)
);

INSERT INTO payment_details (payment_id, booking_id, journey_duration, waiting_duration, coupon_code, fare, payment_type, driver_rating, feedback) VALUES
('PK101', 'BK101', 65, 0, 'WELCOME20', 9.82, 'cash', 1, NULL),
('PK102', 'BK102', 65, 10, 'SEASONAL15', 15.24, 'wallet', 4.2, NULL),
('PK103', 'BK103', 65, 0, 'HAPPY30', 8.59, 'upi', 3.9, NULL),
('PK104', 'BK105', 55, 0, NULL, 54.08, 'upi', NULL, NULL),
('PK105', 'BK106', 70, 15, NULL, 26.91, 'wallet', 4.8, 'Driver is good'),
('PK106', 'BK108', 40, 3, 'DHAMAKA20', 10.88, 'cash', NULL, NULL),
('PK107', 'BK111', 65, 12, 'SEASONAL15', 31.62, 'cash', 4.1, NULL),
('PK108', 'BK112', 42, 10, 'HAPPY30', 14.21, 'cash', 4.2, NULL);
